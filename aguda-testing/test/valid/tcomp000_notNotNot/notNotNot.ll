; ModuleID = ""
target triple = "x86_64-unknown-linux-gnu"
target datalayout = ""

declare external i32 @"printf"(i8* %".1", ...)

define i32 @"_power"(i32 %".1", i32 %".2")
{
entry:
  %".4" = alloca i32
  store i32 %".1", i32* %".4"
  %".6" = alloca i32
  store i32 %".2", i32* %".6"
  %".8" = alloca i32
  store i32 1, i32* %".8"
  br label %"while_0_cond"
while_0_cond:
  %".11" = load i32, i32* %".6"
  %".12" = icmp sgt i32 %".11", 0
  br i1 %".12", label %"while_0_body", label %"while_0_end"
while_0_body:
  %".14" = load i32, i32* %".8"
  %".15" = load i32, i32* %".4"
  %".16" = mul i32 %".14", %".15"
  store i32 %".16", i32* %".8"
  %".18" = load i32, i32* %".6"
  %".19" = sub i32 %".18", 1
  store i32 %".19", i32* %".6"
  br label %"while_0_cond"
while_0_end:
  %".22" = load i32, i32* %".8"
  ret i32 %".22"
}

@"int_format" = internal constant [3 x i8] c"%d\00"
@"true_str" = internal constant [5 x i8] c"true\00"
@"false_str" = internal constant [6 x i8] c"false\00"
@"unit_str" = internal constant [5 x i8] c"unit\00"
define i1 @"main"(i1 %".1")
{
entry:
  %".3" = alloca i1
  store i1 %".1", i1* %".3"
  %".5" = xor i1 1, -1
  %".6" = xor i1 %".5", -1
  %".7" = xor i1 %".6", -1
  %".8" = xor i1 %".7", -1
  %".9" = xor i1 %".8", -1
  %".10" = xor i1 %".9", -1
  %".11" = xor i1 %".10", -1
  %".12" = xor i1 %".11", -1
  %".13" = xor i1 %".12", -1
  %".14" = xor i1 %".13", -1
  %".15" = xor i1 %".14", -1
  %".16" = xor i1 %".15", -1
  %".17" = xor i1 %".16", -1
  %".18" = xor i1 %".17", -1
  %".19" = xor i1 %".18", -1
  %".20" = xor i1 %".19", -1
  %".21" = xor i1 %".20", -1
  %".22" = xor i1 %".21", -1
  %".23" = xor i1 %".22", -1
  %".24" = xor i1 %".23", -1
  %".25" = xor i1 %".24", -1
  %".26" = xor i1 %".25", -1
  %".27" = xor i1 %".26", -1
  %".28" = xor i1 %".27", -1
  %".29" = xor i1 %".28", -1
  %".30" = xor i1 %".29", -1
  %".31" = xor i1 %".30", -1
  %".32" = xor i1 %".31", -1
  %".33" = xor i1 %".32", -1
  %".34" = xor i1 %".33", -1
  %".35" = xor i1 %".34", -1
  %".36" = xor i1 %".35", -1
  %".37" = xor i1 %".36", -1
  %".38" = xor i1 %".37", -1
  %".39" = xor i1 %".38", -1
  %".40" = xor i1 %".39", -1
  %".41" = xor i1 %".40", -1
  %".42" = xor i1 %".41", -1
  %".43" = xor i1 %".42", -1
  %".44" = xor i1 %".43", -1
  %".45" = xor i1 %".44", -1
  %".46" = xor i1 %".45", -1
  %".47" = xor i1 %".46", -1
  %".48" = xor i1 %".47", -1
  %".49" = xor i1 %".48", -1
  %".50" = xor i1 %".49", -1
  %".51" = xor i1 %".50", -1
  %".52" = xor i1 %".51", -1
  %".53" = xor i1 %".52", -1
  %".54" = xor i1 %".53", -1
  %".55" = xor i1 %".54", -1
  %".56" = xor i1 %".55", -1
  %".57" = xor i1 %".56", -1
  %".58" = xor i1 %".57", -1
  %".59" = xor i1 %".58", -1
  %".60" = xor i1 %".59", -1
  %".61" = xor i1 %".60", -1
  %".62" = xor i1 %".61", -1
  %".63" = xor i1 %".62", -1
  %".64" = xor i1 %".63", -1
  %".65" = xor i1 %".64", -1
  %".66" = xor i1 %".65", -1
  %".67" = xor i1 %".66", -1
  %".68" = xor i1 %".67", -1
  %".69" = xor i1 %".68", -1
  %".70" = xor i1 %".69", -1
  %".71" = xor i1 %".70", -1
  %".72" = xor i1 %".71", -1
  %".73" = xor i1 %".72", -1
  %".74" = xor i1 %".73", -1
  %".75" = xor i1 %".74", -1
  %".76" = xor i1 %".75", -1
  %".77" = xor i1 %".76", -1
  %".78" = xor i1 %".77", -1
  %".79" = xor i1 %".78", -1
  %".80" = xor i1 %".79", -1
  %".81" = xor i1 %".80", -1
  %".82" = xor i1 %".81", -1
  %".83" = xor i1 %".82", -1
  %".84" = xor i1 %".83", -1
  %".85" = xor i1 %".84", -1
  %".86" = xor i1 %".85", -1
  %".87" = xor i1 %".86", -1
  %".88" = xor i1 %".87", -1
  %".89" = xor i1 %".88", -1
  %".90" = xor i1 %".89", -1
  %".91" = xor i1 %".90", -1
  %".92" = xor i1 %".91", -1
  %".93" = xor i1 %".92", -1
  %".94" = xor i1 %".93", -1
  %".95" = xor i1 %".94", -1
  %".96" = xor i1 %".95", -1
  %".97" = xor i1 %".96", -1
  %".98" = xor i1 %".97", -1
  %".99" = xor i1 %".98", -1
  %".100" = xor i1 %".99", -1
  %".101" = xor i1 %".100", -1
  %".102" = xor i1 %".101", -1
  %".103" = xor i1 %".102", -1
  %".104" = xor i1 %".103", -1
  %".105" = xor i1 %".104", -1
  %".106" = getelementptr [5 x i8], [5 x i8]* @"true_str", i32 0, i32 0
  %".107" = getelementptr [6 x i8], [6 x i8]* @"false_str", i32 0, i32 0
  %".108" = select  i1 %".105", i8* %".106", i8* %".107"
  %".109" = call i32 (i8*, ...) @"printf"(i8* %".108")
  ret i1 0
}
